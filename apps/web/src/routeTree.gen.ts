/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const LoginLazyImport = createFileRoute('/login')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const ListsIndexLazyImport = createFileRoute('/lists/')()
const InvitesIndexLazyImport = createFileRoute('/invites/')()
const IdeasIndexLazyImport = createFileRoute('/ideas/')()
const DashboardIndexLazyImport = createFileRoute('/dashboard/')()
const BookmarksIndexLazyImport = createFileRoute('/bookmarks/')()
const AuthenticateIndexLazyImport = createFileRoute('/authenticate/')()
const AccountIndexLazyImport = createFileRoute('/account/')()
const PlaceIdLazyImport = createFileRoute('/place/$id')()
const ListIdLazyImport = createFileRoute('/list/$id')()
const InvitesSentLazyImport = createFileRoute('/invites/sent')()
const ListIdInvitesLazyImport = createFileRoute('/list/$id/invites')()

// Create/Update Routes

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ListsIndexLazyRoute = ListsIndexLazyImport.update({
  path: '/lists/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/lists/index.lazy').then((d) => d.Route))

const InvitesIndexLazyRoute = InvitesIndexLazyImport.update({
  path: '/invites/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/invites/index.lazy').then((d) => d.Route))

const IdeasIndexLazyRoute = IdeasIndexLazyImport.update({
  path: '/ideas/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/ideas/index.lazy').then((d) => d.Route))

const DashboardIndexLazyRoute = DashboardIndexLazyImport.update({
  path: '/dashboard/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/dashboard/index.lazy').then((d) => d.Route),
)

const BookmarksIndexLazyRoute = BookmarksIndexLazyImport.update({
  path: '/bookmarks/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/bookmarks/index.lazy').then((d) => d.Route),
)

const AuthenticateIndexLazyRoute = AuthenticateIndexLazyImport.update({
  path: '/authenticate/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/authenticate/index.lazy').then((d) => d.Route),
)

const AccountIndexLazyRoute = AccountIndexLazyImport.update({
  path: '/account/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/account/index.lazy').then((d) => d.Route))

const PlaceIdLazyRoute = PlaceIdLazyImport.update({
  path: '/place/$id',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/place/$id.lazy').then((d) => d.Route))

const ListIdLazyRoute = ListIdLazyImport.update({
  path: '/list/$id',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/list/$id.lazy').then((d) => d.Route))

const InvitesSentLazyRoute = InvitesSentLazyImport.update({
  path: '/invites/sent',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/invites/sent.lazy').then((d) => d.Route))

const ListIdInvitesLazyRoute = ListIdInvitesLazyImport.update({
  path: '/invites',
  getParentRoute: () => ListIdLazyRoute,
} as any).lazy(() =>
  import('./routes/list/$id.invites.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/invites/sent': {
      preLoaderRoute: typeof InvitesSentLazyImport
      parentRoute: typeof rootRoute
    }
    '/list/$id': {
      preLoaderRoute: typeof ListIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/place/$id': {
      preLoaderRoute: typeof PlaceIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/account/': {
      preLoaderRoute: typeof AccountIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/authenticate/': {
      preLoaderRoute: typeof AuthenticateIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/bookmarks/': {
      preLoaderRoute: typeof BookmarksIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      preLoaderRoute: typeof DashboardIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/ideas/': {
      preLoaderRoute: typeof IdeasIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/invites/': {
      preLoaderRoute: typeof InvitesIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/lists/': {
      preLoaderRoute: typeof ListsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/list/$id/invites': {
      preLoaderRoute: typeof ListIdInvitesLazyImport
      parentRoute: typeof ListIdLazyImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  AboutLazyRoute,
  LoginLazyRoute,
  InvitesSentLazyRoute,
  ListIdLazyRoute.addChildren([ListIdInvitesLazyRoute]),
  PlaceIdLazyRoute,
  AccountIndexLazyRoute,
  AuthenticateIndexLazyRoute,
  BookmarksIndexLazyRoute,
  DashboardIndexLazyRoute,
  IdeasIndexLazyRoute,
  InvitesIndexLazyRoute,
  ListsIndexLazyRoute,
])

/* prettier-ignore-end */
