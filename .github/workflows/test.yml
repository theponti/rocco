# Inspired by:
# https://github.com/kentcdodds/kentcdodds.com/blob/main/.github/workflows/deployment.yml
name: 🔍 Code Quality
on:
  push:
    branches:
      - main
  pull_request: {}

env:
  APP_URL: ${{ secrets.APP_URL }}
  COOKIE_SALT: 9yDzDu8E6JzFbbMK
  COOKIE_SECRET: f1qnL2ixpbu99pX0LWGoUBBFJZmNhlBMzWGsNF1e3bg=
  DATABASE_URL: postgresql://postgres:postgres@localhost:5432/rocco
  SENDGRID_API_KEY: SG.1234567890
  JWT_SECRET: f1qnL2ixpbu99pX0LWGoUBBFJZmNhlBMzWGsNF1e3bg=

jobs:
  test:
    name: 🧪 Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 🏗️ Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          run_install: true

      - name: 📦 Install dependencies
        run: npm install

      #! The tests require the Prisma client to be generated.
      - name: 🏗️ Generate Prisma client
        run: npx turbo run prisma:generate

      - name: 🧪 Unit tests
        run: npm run test
        
      
      - name: 🧪 End-to-end tests
        # Uses the official Cypress GitHub action https://github.com/cypress-io/github-action
        uses: cypress-io/github-action@v2
        # uses: cypress-io/github-action@v5
        with:
          build: npm run build
          # Starts web server for E2E tests - replace with your own server invocation
          # https://docs.cypress.io/guides/continuous-integration/introduction#Boot-your-server
          start: npm run dev
          command: npm run test:e2e:ci
          # Address to wait for before running tests
          # wait-on: 'http://localhost:5001' 
          # Records to Cypress Cloud
          # https://docs.cypress.io/guides/cloud/projects#Set-up-a-project-to-record
          # record: true
          # parallel: true # Runs test in parallel using settings above
        env:
          # For recording and parallelization to work you must set your CYPRESS_RECORD_KEY
          # in GitHub repo → Settings → Secrets → Actions
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          # Creating a token https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VITE_API_URL: http://127.0.0.1:4444
          VITE_GOOGLE_API_KEY: ${{ secrets.VITE_GOOGLE_API_KEY }}

      # - name: ⬆️ Upload coverage
      #   uses: codecov/codecov-action@v3
      #   with:
      #     fail_ci_if_error: true
      #   env:
      #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
